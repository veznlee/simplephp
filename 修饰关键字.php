<?php

PHP面向对象——访问修饰符介绍
public（公共的、默认） 
protected（受保护的） 
private（私有的） 

它们可以分别用在类的属性和方法上(类的属性和方法统称为类的成员)，用来修饰类成员的访问权限。 
public（公共的、默认） 
在PHP5中如果类没有指定成员的访问修饰符，默认就是public的访问权限。 
//以下两个方法声明访问权限效果相同 
function say(){}; 
publilc function say(){}; 
当类的成员被声明为public的访问修饰符时，该成员能被外部代码访问和操作。

 
private（私有的） 
被定义为private的成员，对于类内部所有成员都可见，没有访问限制。对类外部不允许访问。 


protected（受保护的） 
protected稍微有点复杂，被声明为protected的成员，只允许该类的子类进行访问。 

访问权限情况表：
访问权限  	public 		private  	protected 		
所有		★
子类		★			★
类内		★			★			★







static关键字

static关键字声明一个属性或方法是和类相关的，而不是和类的某个特定的实例相关，因此，这类属性或方法也称为“类属性”或“类方法”。
如果访问控制权限允许，可不必创建该类对象而直接使用类名加两个冒号“::”调用。
static关键字可以用来修饰变量、方法，不经过实例化，就可以直接访问类中static的属性和static的方法。
static 的属性和方法，只能访问static的属性和方法，不能访问非静态的属性和方法。因为静态属性和方法被创建时，可能还没有任何这个类的实例可以被调用。
static的属性，在内存中只有一份，为所有的实例共用。
使用self:: 关键字访问当前类的静态成员。
静态属性公用特性
一个类的所有实例，共用类中的静态属性。
也就是说，在内存中即使有多个实例，静态的属性也只有一份。